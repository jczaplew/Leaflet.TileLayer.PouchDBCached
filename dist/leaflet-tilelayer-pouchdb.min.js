function asyncEach(t,e,n){function o(){return i++,i===r?void n():void e(t[i],o)}var i=-1,r=t.length;o()}!function t(e,n,o){function i(a,s){if(!n[a]){if(!e[a]){var l="function"==typeof require&&require;if(!s&&l)return l(a,!0);if(r)return r(a,!0);var h=new Error("Cannot find module '"+a+"'");throw h.code="MODULE_NOT_FOUND",h}var u=n[a]={exports:{}};e[a][0].call(u.exports,function(t){var n=e[a][1][t];return i(n?n:t)},u,u.exports,t,e,n,o)}return n[a].exports}for(var r="function"==typeof require&&require,a=0;a<o.length;a++)i(o[a]);return i}({1:[function(t,e,n){(function(e){function o(t){return{type:"Feature",geometry:f.tileToGeoJSON(t),properties:{}}}function i(t,e){var n,o,i=t.coordinates,s=e.max_zoom,c={},d=[];if("Point"===t.type)return[f.pointToTile(i[0],i[1],s)];if("MultiPoint"===t.type)for(n=0;n<i.length;n++)o=f.pointToTile(i[n][0],i[n][1],s),c[u(o[0],o[1],o[2])]=!0;else if("LineString"===t.type)l(c,i,s);else if("MultiLineString"===t.type)for(n=0;n<i.length;n++)l(c,i[n],s);else if("Polygon"===t.type)a(c,d,i,s);else{if("MultiPolygon"!==t.type)throw new Error("Geometry type not implemented");for(n=0;n<i.length;n++)a(c,d,i[n],s)}if(e.min_zoom!==s){var p=d.length;for(h(c,d),n=0;p>n;n++){var g=d[n];c[u(g[0],g[1],g[2])]=!0}return r(c,d,e)}return h(c,d),d}function r(t,e,n){for(var o=[],i=n.max_zoom;i>n.min_zoom;i--){for(var r={},a=[],s=0;s<e.length;s++){var l=e[s];if(l[0]%2===0&&l[1]%2===0){var h=u(l[0]+1,l[1],i),c=u(l[0],l[1]+1,i),f=u(l[0]+1,l[1]+1,i);if(t[h]&&t[c]&&t[f]){t[u(l[0],l[1],l[2])]=!1,t[h]=!1,t[c]=!1,t[f]=!1;var d=[l[0]/2,l[1]/2,i-1];i-1===n.min_zoom?o.push(d):(r[u(l[0]/2,l[1]/2,i-1)]=!0,a.push(d))}}}for(s=0;s<e.length;s++)l=e[s],t[u(l[0],l[1],l[2])]&&o.push(l);t=r,e=a}return o}function a(t,e,n,o){for(var i=[],r=0;r<n.length;r++){var a=[];l(t,n[r],o,a);for(var h=0,c=a.length,f=c-1;c>h;f=h++){var d=(h+1)%c,p=a[h][1];(p>a[f][1]||p>a[d][1])&&(p<a[f][1]||p<a[d][1])&&p!==a[d][1]&&i.push(a[h])}}for(i.sort(s),r=0;r<i.length;r+=2){p=i[r][1];for(var g=i[r][0]+1;g<i[r+1][0];g++){var v=u(g,p,o);t[v]||e.push([g,p,o])}}}function s(t,e){return t[1]-e[1]||t[0]-e[0]}function l(t,e,n,o){for(var i,r,a=0;a<e.length-1;a++){var s=f.pointToTileFraction(e[a][0],e[a][1],n),l=f.pointToTileFraction(e[a+1][0],e[a+1][1],n),h=s[0],c=s[1],d=l[0],p=l[1],g=d-h,v=p-c;if(0!==v||0!==g){var _=g>0?1:-1,m=v>0?1:-1,y=Math.floor(h),b=Math.floor(c),T=0===g?1/0:Math.abs(((g>0?1:0)+y-h)/g),L=0===v?1/0:Math.abs(((v>0?1:0)+b-c)/v),M=Math.abs(_/g),x=Math.abs(m/v);for((y!==i||b!==r)&&(t[u(y,b,n)]=!0,o&&b!==r&&o.push([y,b]),i=y,r=b);1>T||1>L;)L>T?(T+=M,y+=_):(L+=x,b+=m),t[u(y,b,n)]=!0,o&&b!==r&&o.push([y,b]),i=y,r=b}}o&&b===o[0][1]&&o.pop()}function h(t,e){for(var n=Object.keys(t),o=0;o<n.length;o++)e.push(c(+n[o]))}function u(t,e,n){var o=2*(1<<n);return 32*(o*e+t)+n}function c(t){var e=t%32,n=2*(1<<e),o=(t-e)/32,i=o%n,r=(o-i)/n%n;return[i,r,e]}var f=t("tilebelt");n.geojson=function(t,e){return{type:"FeatureCollection",features:i(t,e).map(o)}},n.tiles=i,e.tileCover=i,n.indexes=function(t,e){return i(t,e).map(f.tileToQuadkey)}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{tilebelt:2}],2:[function(t,e,n){function o(t){var e=r(t[0]+1,t[2]),n=r(t[0],t[2]),o=a(t[1]+1,t[2]),i=a(t[1],t[2]);return[n,o,e,i]}function i(t){var e=o(t),n={type:"Polygon",coordinates:[[[e[0],e[1]],[e[0],e[3]],[e[2],e[3]],[e[2],e[1]],[e[0],e[1]]]]};return n}function r(t,e){return t/Math.pow(2,e)*360-180}function a(t,e){var n=Math.PI-2*Math.PI*t/Math.pow(2,e);return b*Math.atan(.5*(Math.exp(n)-Math.exp(-n)))}function s(t,e,n){var o=m(t,e,n);return o[0]=Math.floor(o[0]),o[1]=Math.floor(o[1]),o}function l(t){return[[2*t[0],2*t[1],t[2]+1],[2*t[0]+1,2*t[1],t[2]+1],[2*t[0]+1,2*t[1]+1,t[2]+1],[2*t[0],2*t[1]+1,t[2]+1]]}function h(t){return t[0]%2===0&&t[1]%2===0?[t[0]/2,t[1]/2,t[2]-1]:t[0]%2===0&&!t[1]%2===0?[t[0]/2,(t[1]-1)/2,t[2]-1]:!t[0]%2===0&&t[1]%2===0?[(t[0]-1)/2,t[1]/2,t[2]-1]:[(t[0]-1)/2,(t[1]-1)/2,t[2]-1]}function u(t){return l(h(t))}function c(t,e){for(var n=u(t),o=0;o<n.length;o++)if(!f(e,n[o]))return!1;return!0}function f(t,e){for(var n=0;n<t.length;n++)if(d(t[n],e))return!0;return!1}function d(t,e){return t[0]===e[0]&&t[1]===e[1]&&t[2]===e[2]}function p(t){for(var e="",n=t[2];n>0;n--){var o=0,i=1<<n-1;0!==(t[0]&i)&&o++,0!==(t[1]&i)&&(o+=2),e+=o.toString()}return e}function g(t){for(var e=0,n=0,o=t.length,i=o;i>0;i--){var r=1<<i-1;switch(t[o-i]){case"0":break;case"1":e|=r;break;case"2":n|=r;break;case"3":e|=r,n|=r}}return[e,n,o]}function v(t){var e=s(t[0],t[1],32),n=s(t[2],t[3],32),o=[e[0],e[1],n[0],n[1]],i=_(o);if(0===i)return[0,0,0];var r=o[0]>>>32-i,a=o[1]>>>32-i;return[r,a,i]}function _(t){for(var e=28,n=0;e>n;n++){var o=1<<32-(n+1);if((t[0]&o)!=(t[2]&o)||(t[1]&o)!=(t[3]&o))return n}return e}function m(t,e,n){var o=Math.sin(e*y),i=Math.pow(2,n),r=i*(t/360+.5),a=i*(.5-.25*Math.log((1+o)/(1-o))/Math.PI);return[r,a,n]}var y=Math.PI/180,b=180/Math.PI;e.exports={tileToGeoJSON:i,tileToBBOX:o,getChildren:l,getParent:h,getSiblings:u,hasTile:f,hasSiblings:c,tilesEqual:d,tileToQuadkey:p,quadkeyToTile:g,pointToTile:s,bboxToTile:v,pointToTileFraction:m}},{}]},{},[1]),L.TileLayer.addInitHook(function(){return this.options.useCache?(this._db=new PouchDB("offline-tiles"),this._canvas=document.createElement("canvas"),void(this._canvas.getContext&&this._canvas.getContext("2d")||(this._canvas=null))):(this._db=null,void(this._canvas=null))}),L.TileLayer.prototype.options.useCache=!1,L.TileLayer.prototype.options.useOnlyCache=!1,L.TileLayer.prototype.options.cacheMaxAge=864e5,L.TileLayer.include({createTile:function(t,e){var n=document.createElement("img");n.onerror=L.bind(this._tileOnError,this,e,n),this.options.crossOrigin&&(n.crossOrigin=""),n.alt="";var o=this.getTileUrl(t);return this.options.useCache&&this._canvas?this._db.get(o,{revs_info:!0},this._onCacheLookup(n,o,e)):n.onload=L.bind(this._tileOnLoad,this,e,n),n.src=o,n},_onCacheLookup:function(t,e,n){return function(o,i){i?(this.fire("tilecache-hit",{tile:t,url:e}),Date.now()>i.timestamp+this.options.cacheMaxAge&&!this.options.useOnlyCache?(t.crossOrigin="Anonymous",t.src=e,t.onload=L.bind(this._tileOnLoad,this,n,t),t.onerror=function(t){this.src=i.dataUrl}):(t.onload=L.bind(this._tileOnLoad,this,n,t),t.src=i.dataUrl)):(this.fire("tilecache-miss",{tile:t,url:e}),this.options.useOnlyCache?(t.onload=L.bind(this._tileOnLoad,this,n,L.Util.emptyImageUrl),t.src=L.Util.emptyImageUrl):(t.onload=L.bind(this._tileOnLoad,this,n,t),t.crossOrigin="Anonymous",t.src=e))}.bind(this)},URI2Base64:function(t,e){var n=new Image;n.crossOrigin="Anonymous",n.onload=function(){var t,n=document.createElement("canvas"),o=n.getContext("2d");n.height=this.height,n.width=this.width,o.drawImage(this,0,0),t=n.toDataURL("image/png",1),e(t),n=null},n.src=t},seed:function(t,e,n){if(!(e>n)&&this._map){this.fire("tilecache-load-start",{bbox:t,minZoom:e,maxZoom:n});for(var o={type:"Polygon",coordinates:[[[t._southWest.lng,t._southWest.lat],[t._southWest.lng,t._northEast.lat],[t._northEast.lng,t._northEast.lat],[t._northEast.lng,t._southWest.lat],[t._southWest.lng,t._southWest.lat]]]},i=[],r=e;n+1>r;r++)i=i.concat(tileCover(o,{min_zoom:r,max_zoom:r}));this._seedTiles(i)}},_seedTiles:function(t){var e=this._url,n=0,o=0,i="data:image/png;base64,";asyncEach(t,function(r,a){var s=e.replace("{x}",r[0]).replace("{y}",r[1]).replace("{z}",r[2]);this._db.get(s,function(e,r){r?a(null):this.URI2Base64(s,function(e){var r=Date.now();this._db.put({dataUrl:e,timestamp:r},s,r),n+=1,o+=Math.round(3*(e.length-i.length)/4),this.fire("tilecache-load-progress",{done:n,total:t.length}),a(null)}.bind(this))}.bind(this))}.bind(this),function(){this.fire("tilecache-load-done",{downloadSize:(o/1e6).toFixed(2)}),console.log((o/1e6).toFixed(2))}.bind(this))},clear:function(t,e,n){this.fire("tilecache-clear-start");for(var o={type:"Polygon",coordinates:[[[t._southWest.lng,t._southWest.lat],[t._southWest.lng,t._northEast.lat],[t._northEast.lng,t._northEast.lat],[t._northEast.lng,t._southWest.lat],[t._southWest.lng,t._southWest.lat]]]},i=[],r=e;n+1>r;r++)i=i.concat(tileCover(o,{min_zoom:r,max_zoom:r}));var a=this._url,s=0;asyncEach(i,function(t,e){var n=a.replace("{x}",t[0]).replace("{y}",t[1]).replace("{z}",t[2]);this._db.get(n,function(t,n){n?this._db.remove(n,function(t){e(null)}):e(null),s+=1,this.fire("tilecache-clear-progress",{done:s,total:i.length})}.bind(this))}.bind(this),function(){this._db.compact(function(t){this.fire("tilecache-clear-done",!0)}.bind(this))}.bind(this))},destroy:function(t){this._db.destroy().then(function(){this._db=new PouchDB("offline-tiles"),t&&t(null)}.bind(this))}});